import "Srl/Console";
import "Apm";
Apm.importFile("Alusus/Threading");

def mutex: Threading.Mutex;
def counter: Int = 0;

func test {
    use Threading;
    mutex.init();
    def NTHREADS: 10;
    def pthread_id: array[Thread, NTHREADS];
    def iInteger: Int;
    def jInteger: Int;
    for iInteger = 0, iInteger < NTHREADS, iInteger++ {
        createThread(pthread_id(iInteger)~ptr, 0, threadFunction~ptr, 0);
    }

    for jInteger = 0, jInteger < NTHREADS, jInteger++ {
        joinThread(pthread_id(jInteger), 0);
    }
}

func threadFunction(p: ptr): ptr {
    use Threading;
    mutex.lock();
    Srl.Console.print("Thread number: %d\n", counter);
    counter++;
    mutex.unlock();
    return 0;
}

test();
