import "Srl/Console";
import "Srl/System";
import "Srl/Math";
import "Apm";
Apm.importFile("Alusus/Threading");
use Srl;

class A {
    def i: Int;
    handler this~init() {
        Console.print("A~init\n");
    }
    handler this~terminate() {
        Console.print("A~terminate\n");
    }
}

def var: Threading.ThreadLocal[A](closure (val: ref[A]) {
    val.i = Math.random();
});

func test {
    use Threading;

    def pthread1: Thread;
    def pthread2: Thread;

    createThread(pthread1~ptr, 0, printMessage~ptr, "thread1");
    createThread(pthread2~ptr, 0, printMessage~ptr, "thraed2");

    joinThread(pthread1, 0);
    joinThread(pthread2, 0);
}

func printMessage (p: ptr): ptr {
    def i: Int;
    for i = 0, i < 10, ++i {
       Console.print("%s: %d, %d\n", p, var.value.i, i);
       System.sleep(10000);
   }
   return 0;
}

test();
